{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample filmoteka server.",
        "title": "Swagger filmoteka API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/actors": {
            "get": {
                "description": "get all actors",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Actor"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    }
                }
            },
            "post": {
                "description": "create new actor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "parameters": [
                    {
                        "description": "input data",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateActor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    }
                }
            }
        },
        "/actors/{id}": {
            "get": {
                "description": "get one actors by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    }
                }
            },
            "put": {
                "description": "Update actor by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "input data",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateActor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.Actor"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete one actors by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Actors"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Actor ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/internal.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal.Error": {
            "type": "object"
        },
        "models.Actor": {
            "type": "object",
            "required": [
                "birth_date",
                "gender",
                "name"
            ],
            "properties": {
                "birth_date": {
                    "description": "Birth date in 2006-01-02 format",
                    "type": "string",
                    "example": "1963-06-09"
                },
                "gender": {
                    "description": "Gender, \"M\" or \"F\"",
                    "type": "string",
                    "example": "M"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "Actors name",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Johnny Depp"
                }
            }
        },
        "models.CreateActor": {
            "type": "object",
            "required": [
                "birth_date",
                "gender",
                "name"
            ],
            "properties": {
                "birth_date": {
                    "description": "Birth date in 2006-01-02 format",
                    "type": "string",
                    "example": "1963-06-09"
                },
                "gender": {
                    "description": "Gender, \"M\" or \"F\"",
                    "type": "string",
                    "example": "M"
                },
                "name": {
                    "description": "Actors name",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Johnny Depp"
                }
            }
        },
        "models.UpdateActor": {
            "type": "object",
            "required": [
                "birth_date",
                "gender",
                "name"
            ],
            "properties": {
                "birth_date": {
                    "description": "Birth date in 2006-01-02 format",
                    "type": "string",
                    "example": "1963-06-09"
                },
                "gender": {
                    "description": "Gender, \"M\" or \"F\"",
                    "type": "string",
                    "example": "M"
                },
                "name": {
                    "description": "Actors name",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3,
                    "example": "Johnny Depp"
                }
            }
        }
    }
}